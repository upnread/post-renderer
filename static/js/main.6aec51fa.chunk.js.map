{"version":3,"sources":["../../src/styles/styles.ts","../../src/utils/plugins.tsx","../../src/lib/multi-decorators.js","../../src/components/link.tsx","../../src/utils/decorators.ts","../../src/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","stylesMap","red","color","orange","yellow","green","blue","violet","black","HIGHLIGHT","backgroundColor","CODE","padding","Divider","focusPlugin","createFocusPlugin","resizeablePlugin","createResizeablePlugin","alignmentPlugin","createAlignmentPlugin","hashtagPlugin","createHashtagPlugin","videoDecorator","composeDecorators","decorator","videoPlugin","createVideoPlugin","theme","iframe","iframeContainer","invalidVideoSrc","video","linkifyPlugin","createLinkifyPlugin","component","props","style","cursor","onClick","window","dividerPlugin","createDividerPlugin","dividerComponent","React","plugins","createImagePlugin","MultiDecorator","decorators","this","List","block","contentState","decorations","Array","i","_decorations","key","offset","getDecoratorForKey","getInnerKey","parts","index","Number","get","Link","url","href","rel","target","getPluginDecoratorArray","plugin","findLinkEntities","contentBlock","entityKey","character","post","EditorState","postBody","setPostBody","postValue","JSON","editorValue","convertFromRaw","prism","defaultSyntax","strategy","blockStyleFn","editorState","customStyleMap","readOnly","getPostById","a","axios","params","token","post_id","response","App","useState","body","setPost","useEffect","data","getPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6aec51fa.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 49rem;\n\n  .blockquote {\n    padding-left: 8px;\n    border-left: 2px solid #3342b4;\n    font-style: italic;\n  }\n\n  .code-block {\n    padding: 8px;\n    background-color: #f5f5f5;\n  }\n\n  .video {\n    width: 100%;\n    height: 350px;\n  }\n`\n\nconst stylesMap: IObjectKeys = {\n  red: {\n    color: '#e53935'\n  },\n  orange: {\n    color: '#ff5722'\n  },\n  yellow: {\n    color: '#ffc107'\n  },\n  green: {\n    color: '#087f23'\n  },\n  blue: {\n    color: '#0069c0'\n  },\n  violet: {\n    color: '#673ab7'\n  },\n  black: {\n    color: 'black'\n  },\n  HIGHLIGHT: {\n    backgroundColor: '#faed27'\n  },\n  CODE: {\n    padding: '2px 8px',\n    color: '#f03a47',\n    backgroundColor: '#f5f5f5'\n  }\n}\n\ninterface IObjectKeys {\n  [key: string]: any\n}\n\nexport default stylesMap\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { composeDecorators } from '@draft-js-plugins/editor'\nimport createLinkifyPlugin from '@draft-js-plugins/linkify'\nimport createHashtagPlugin from 'draft-js-hashtag-plugin'\nimport createImagePlugin from '@draft-js-plugins/image'\nimport createAlignmentPlugin from '@draft-js-plugins/alignment'\nimport createFocusPlugin from '@draft-js-plugins/focus'\nimport createResizeablePlugin from '@draft-js-plugins/resizeable'\nimport createDividerPlugin from '@draft-js-plugins/divider'\nimport createVideoPlugin from '@draft-js-plugins/video'\n\nimport 'prismjs/themes/prism.css'\nimport 'draft-js-hashtag-plugin/lib/plugin.css'\nimport '@draft-js-plugins/alignment/lib/plugin.css'\nimport '@draft-js-plugins/image/lib/plugin.css'\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #a3a2a8;\n`\n\nconst focusPlugin = createFocusPlugin()\nconst resizeablePlugin = createResizeablePlugin({})\nconst alignmentPlugin = createAlignmentPlugin()\nconst hashtagPlugin = createHashtagPlugin()\n\nconst videoDecorator = composeDecorators(focusPlugin.decorator)\nconst decorator = composeDecorators(\n  alignmentPlugin.decorator,\n  resizeablePlugin.decorator,\n  focusPlugin.decorator\n)\n\nconst videoPlugin = createVideoPlugin({\n  decorator: videoDecorator,\n  theme: {\n    iframe: 'video',\n    iframeContainer: '',\n    invalidVideoSrc: '',\n    video: ''\n  }\n})\n\nconst linkifyPlugin = createLinkifyPlugin({\n  component: (props: any) => (\n    <a\n      {...props}\n      style={{ cursor: 'pointer', color: '#619bd1' }}\n      onClick={() => window.open(props.href)}\n    />\n  )\n})\n\nconst dividerPlugin = createDividerPlugin({\n  decorator,\n  dividerComponent: () => <Divider />\n})\n\nconst imagePlugin = createImagePlugin({ decorator })\n\nconst plugins = [\n  imagePlugin,\n  videoPlugin,\n  linkifyPlugin,\n  hashtagPlugin,\n  focusPlugin,\n  alignmentPlugin,\n  resizeablePlugin,\n  dividerPlugin\n]\n\nexport default plugins\n","import { List } from 'immutable'\n\nconst KEY_SEPARATOR = '-'\n\nfunction MultiDecorator(decorators) {\n  this.decorators = List(decorators)\n}\n\nMultiDecorator.prototype.getDecorations = function (block, contentState) {\n  var decorations = Array(block.getText().length).fill(null)\n\n  this.decorators.forEach(function (decorator, i) {\n    var _decorations = decorator.getDecorations(block, contentState)\n\n    _decorations.forEach(function (key, offset) {\n      if (!key) {\n        return\n      }\n\n      key = i + KEY_SEPARATOR + key\n\n      decorations[offset] = key\n    })\n  })\n\n  return List(decorations)\n}\n\nMultiDecorator.prototype.getComponentForKey = function (key) {\n  var decorator = this.getDecoratorForKey(key)\n  return decorator.getComponentForKey(this.getInnerKey(key))\n}\n\nMultiDecorator.prototype.getPropsForKey = function (key) {\n  var decorator = this.getDecoratorForKey(key)\n  return decorator.getPropsForKey(this.getInnerKey(key))\n}\n\nMultiDecorator.prototype.getDecoratorForKey = function (key) {\n  var parts = key.split(KEY_SEPARATOR)\n  var index = Number(parts[0])\n\n  return this.decorators.get(index)\n}\n\nMultiDecorator.prototype.getInnerKey = function (key) {\n  var parts = key.split(KEY_SEPARATOR)\n  return parts.slice(1).join(KEY_SEPARATOR)\n}\n\nexport default MultiDecorator\n","import React from 'react'\n\nconst Link = (props: any) => {\n  const { url } = props.contentState.getEntity(props.entityKey).getData()\n  return (\n    <a href={url} rel='nofollow noreferrer' target='_blank'>\n      {props.children}\n    </a>\n  )\n}\n\nexport default Link\n","import { CompositeDecorator } from 'draft-js'\nimport PrismDecorator from 'draft-js-prism'\nimport Prism from 'prismjs'\n\nimport MultiDecorator from '../lib/multi-decorators'\n\nimport Link from '../components/link'\n\nimport plugins from './plugins'\n\nfunction getPluginDecoratorArray() {\n  let decorators: any = []\n  let plugin\n\n  for (plugin of plugins) {\n    if (plugin.decorators !== null && plugin.decorators !== undefined) {\n      decorators = decorators.concat(plugin.decorators)\n    }\n  }\n  return decorators\n}\n\nfunction findLinkEntities(contentBlock: any, callback: any, contentState: any) {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity()\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === 'LINK'\n    )\n  }, callback)\n}\n\nfunction grabbingAllPluginDecorators() {\n  const prismDecorator = new PrismDecorator({\n    prism: Prism,\n    defaultSyntax: 'javascript'\n  })\n\n  const decoratorLink = new CompositeDecorator([\n    {\n      strategy: findLinkEntities,\n      component: Link\n    }\n  ])\n\n  return new (MultiDecorator as any)([\n    prismDecorator,\n    decoratorLink,\n    new CompositeDecorator(getPluginDecoratorArray())\n  ])\n}\n\nexport default grabbingAllPluginDecorators\n","import * as React from 'react'\nimport { EditorState, convertFromRaw } from 'draft-js'\nimport Editor from '@draft-js-plugins/editor'\n\nimport stylesMap, { Container } from './styles/styles'\n\nimport plugins from './utils/plugins'\nimport grabbingAllPluginDecorators from './utils/decorators'\n\nimport 'draft-js/dist/Draft.css'\n\ninterface TProps {\n  post: string\n}\n\nconst PostReader = ({ post }: TProps) => {\n  const [postBody, setPostBody] = React.useState(EditorState.createEmpty())\n\n  React.useEffect(() => {\n    try {\n      const postValue = JSON.parse(post)\n      const editorValue = convertFromRaw(postValue)\n      const decorator = grabbingAllPluginDecorators()\n      setPostBody(EditorState.createWithContent(editorValue, decorator))\n    } catch {}\n  }, [post])\n\n  function myBlockStyleFn(contentBlock: any) {\n    const type = contentBlock.getType()\n    return type\n  }\n\n  return (\n    <Container>\n      <Editor\n        blockStyleFn={myBlockStyleFn}\n        editorState={postBody}\n        customStyleMap={stylesMap}\n        plugins={plugins}\n        readOnly\n      />\n    </Container>\n  )\n}\n\nexport default PostReader\n","import React from 'react'\nimport axios from 'axios'\nimport PostRenderer from '@upnread/post-renderer'\n\nasync function getPostById() {\n  const post_id = 0 // This is the post id to bring the post that you want.\n  const token = '' // This is where you would add your private blog token that is provide it into your account.\n  const endpoint = 'https://api.upnread.com/api/post/get_post'\n\n  const response = await axios.get(endpoint, { params: { token, post_id } })\n  return response\n}\n\nconst App = () => {\n  const [post, setPost] = React.useState({ body: '' })\n\n  React.useEffect(() => {\n    async function getPost() {\n      const { data } = await getPostById()\n      setPost(data)\n    }\n\n    getPost()\n  }, [])\n\n  return <PostRenderer post={post.body} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}